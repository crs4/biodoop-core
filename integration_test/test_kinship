#!/usr/bin/env python

# BEGIN_COPYRIGHT
# 
# Copyright (C) 2009-2013 CRS4.
# 
# This file is part of biodoop-core.
# 
# biodoop-core is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.
# 
# biodoop-core is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
# 
# You should have received a copy of the GNU General Public License along with
# biodoop-core.  If not, see <http://www.gnu.org/licenses/>.
# 
# END_COPYRIGHT

import os
import numpy as np
os.environ["LIBHDFS_OPTS"] = "-Xmx512m"

import pydoop
import pydoop.hdfs as hdfs
import bl.core.gt.kinship as kinship

N_MAPPERS = os.getenv("N_MAPPERS", "5")

THIS_DIR = os.path.dirname(os.path.abspath(__file__))

INPUT = "file:%s/input" % THIS_DIR

OUTPUT = "file:%s/output" % THIS_DIR
SCRIPT = "%s/../scripts/kinship" % THIS_DIR
EXPECTED_OUTPUT = "%s/expected_output" % THIS_DIR
OPTS = "-m %s --log-level DEBUG --mr-libhdfs-opts=-Xmx128m" % N_MAPPERS

os.system("%s dfsadmin -safemode wait" % pydoop.hadoop_exec())
try:
  hdfs.rmr(OUTPUT)
except IOError:
  pass
os.system("%s %s %s %s" % (SCRIPT, OPTS, INPUT, OUTPUT))

with hdfs.open(OUTPUT) as f:
  k = kinship.KinshipBuilder.deserialize(f.read())
with open(EXPECTED_OUTPUT) as f:
  exp_k = np.fromfile(f, dtype=np.float32)
if np.allclose(k.flatten(), exp_k, atol=1e-3):
  print "OK"
else:
  print "ERROR"  
  with open("mr_kinship", "w") as fo:
    k.tofile(fo)
