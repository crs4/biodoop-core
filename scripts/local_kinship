#!/usr/bin/env python

# BEGIN_COPYRIGHT
# 
# Copyright (C) 2009-2013 CRS4.
# 
# This file is part of biodoop-core.
# 
# biodoop-core is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.
# 
# biodoop-core is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
# 
# You should have received a copy of the GNU General Public License along with
# biodoop-core.  If not, see <http://www.gnu.org/licenses/>.
# 
# END_COPYRIGHT

"""
Local (i.e., no MapReduce) kinship matrix computation.

FIXME: this is just a rough version
"""

import sys, os
import bl.core.gt.kinship as kinship


INPUT = sys.argv[1]


def calc_kinship(input_fn):
  AlleleCountError = kinship.AlleleCountError
  builder = None
  with open(input_fn) as fi:
    for i, line in enumerate(fi):
      line = line.split()
      if builder is None:
        builder = kinship.KinshipBuilder(len(line))
      try:
        builder.add_contribution(line)
      except AlleleCountError as e:
        raise RuntimeError("line %d: %s" % (i+1, e))
  return builder.build()


if __name__ == "__main__":
  k = calc_kinship(INPUT)
  tag = os.path.splitext(os.path.basename(INPUT))[0]
  with open("%s.kinship" % tag, "w") as fo:
    fo.write(kinship.KinshipBuilder.serialize(k))
