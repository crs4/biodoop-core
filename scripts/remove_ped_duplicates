#!/usr/bin/env python

# BEGIN_COPYRIGHT
# 
# Copyright (C) 2009-2013 CRS4.
# 
# This file is part of biodoop-core.
# 
# biodoop-core is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option)
# any later version.
# 
# biodoop-core is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
# 
# You should have received a copy of the GNU General Public License along with
# biodoop-core.  If not, see <http://www.gnu.org/licenses/>.
# 
# END_COPYRIGHT

"""
Remove duplicate entries from a PED file.
"""

import sys, argparse
from collections import Counter


def dup_filter(f, dump_fn=None):
  id_count = Counter()
  for line in f:
    id_ = line.split(None, 2)[1]
    if id_count[id_] == 0:
      yield line
    id_count[id_] += 1
  if dump_fn:
    with open(dump_fn, "w") as fo:
      for id_, c in id_count.most_common():
        if c < 2:
          break
        fo.write("%s\t%d\n" % (id_, c))
    print "wrote %r" % (dump_fn,)


def make_parser():
  parser = argparse.ArgumentParser(description=__doc__.strip())
  parser.add_argument("ped_file", metavar="PED_FILE")
  parser.add_argument("-o", "--output", metavar="FILE", help="output file")
  parser.add_argument("-d", "--dump", metavar="FILE",
                      help="dump duplicate info to this file")
  return parser


def main(argv):
  parser = make_parser()
  args = parser.parse_args(argv[1:])
  if not args.output:
    args.output = "%s.remdup" % args.ped_file
  with open(args.ped_file) as fi, open(args.output, 'w') as fo:
    for line in dup_filter(fi, dump_fn=args.dump):
      fo.write(line)
  print "wrote %r" % (args.output,)


if __name__ == "__main__":
  main(sys.argv)
